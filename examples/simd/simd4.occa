#include <stdio.h>

// #include "/Users/lucas/research/code/occa/examples/simd/vectorOps.hpp"
#include "/home/timwar/Work/git/LW/occa.lw/examples/simd/vectorOps.hpp"

// #define vfloat float4
occaKernel void simd(occaKernelInfoArg,
                     occaConst int occaVariable entries,
                     occaConst occaPointer vfloat4 * occaRestrict a,
                     occaConst occaPointer vfloat4 * occaRestrict b,
                     occaPointer           vfloat4 * occaRestrict ab){

  std::cout << "OCCA_MEM_ALIGN = " << OCCA_MEM_ALIGN << std::endl;
  occaParallelFor
  occaOuterFor0{
    occaInnerFor0{
      const int N = occaGlobalId0;

#if 0
      __m128 abv;
      __m128 av = _mm_load_ps((float*)&a[N]);
      __m128 bv  = _mm_load_ps((float*)&b[N]);

      abv = _mm_add_ps(av,bv);

      _mm_store_ps((float*)&ab[N], abv);
#elif 0
      float4 av, bv, abv;
      occaLoad(a[N], av);
      occaLoad(b[N], bv);
      occaAdd(av, bv, abv);
      occaStore(abv, ab[N]);
#elif 0
      // option 1
      vfloat4 av(&a[N]), bv(&b[N]), abv;
      abv = av + bv;
      ab[N] = abv;
#elif 1
      ab[N] = a[N] + b[N];
#endif
    }
  }
}
